// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250624193201_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "thapelom@smith.com",
                            FirstName = "Thapelo",
                            LastName = "Smith",
                            PhoneNumber = "0741200252"
                        },
                        new
                        {
                            Id = 2,
                            Email = "motlatso@maano.com",
                            FirstName = "Motlatso",
                            LastName = "Maano",
                            PhoneNumber = "0795855252"
                        },
                        new
                        {
                            Id = 3,
                            Email = "john@brown.com",
                            FirstName = "John",
                            LastName = "Brown",
                            PhoneNumber = "0712100120"
                        },
                        new
                        {
                            Id = 4,
                            Email = "chris@white.com",
                            FirstName = "Chris",
                            LastName = "White",
                            PhoneNumber = "0720000452"
                        },
                        new
                        {
                            Id = 5,
                            Email = "james@exaadams.com",
                            FirstName = "James",
                            LastName = "Adams",
                            PhoneNumber = "0645855252"
                        });
                });

            modelBuilder.Entity("Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContactId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Note");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            Content = "Met at conference"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 1,
                            Content = "In a meeting"
                        },
                        new
                        {
                            Id = 3,
                            ContactId = 2,
                            Content = "Works in HR"
                        },
                        new
                        {
                            Id = 4,
                            ContactId = 3,
                            Content = "Follow up next week."
                        },
                        new
                        {
                            Id = 5,
                            ContactId = 2,
                            Content = "Requested demo account"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
